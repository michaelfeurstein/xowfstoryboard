set :debug 1
set :autoname 1

#
# Define a Property for the workflow to configure it.  When we create
# the workflow, we can pass e.g.
#
#   storyboard.wf?m=create-new&...&p.wf-notation=natural-language&...
#
# to the workflow. This parameter is kept as an instance variable of
# the workflow instance.
#
Property wf_notation -default "natural-language" -allow_query_parameter true

Action initialize -proc activate {obj} {
  set wf_notation [$obj property wf_notation]
  ns_log notice "storyboard.wf --> wf_notation:${wf_notation}"

  set name [$obj name]
  if {[$obj is_new_entry $name]} {
    $obj title "Fresh '${wf_notation}' storyboard ($name)"
}
}

Action save \
	-label {save draft} \
	-title {Save Draft}

#Action submit \
#	-next_state submitted \
#	-label {submit} \
#	-title {Submit}

#Action unsubmit \
#	-next_state initial \
#	-label {unsubmit} \
#	-title {Unsubmit}

Action finish \
	-next_state finished \
	-label {finish} \
	-title {Finished}

State parameter { {form en:storyboard.form} {view_method edit} }

State initial -actions {save finish} -form_constraints {
   editor:monaco_storyboard,required,validator=storyboard
}

#
# State using a different form (trying things out)
#
#State submitted -actions {unsubmit finish} -form en:storyboard_test.form -form_constraints {
#   _name:text,disabled=true
#   editor:monaco_storyboard,disabled=true
#   preview:text,label=ThisPreview
#}

State finished -view_method view -form_constraints {
   _name:text,disabled=true
   editor:monaco_storyboard,disabled=true
}

